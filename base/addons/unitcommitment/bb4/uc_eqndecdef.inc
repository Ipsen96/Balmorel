* UC Translated to BB4 by Juan Gea Berm√∫dez 2018.

EQUATION  QUCVUCON(Y,AAA,G,S,T)    'Unit commitment: Number of endogenous units on limited by unit size and capacity)';
EQUATION  QUCVUCU(Y,AAA,G,S,T)     'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)';
EQUATION  QUCVUCD(Y,AAA,G,S,T)     'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)';
EQUATION  QUCSTARTQ(Y,AAA,G,S,T)   'Unit commitment: on-off logic';
EQUATION  QUCMAXVGF(Y,AAA,G,S,T)   'Unit commitment: Fuel consumption below maximum (of units online)';

QUCVUCON(IY411,IA,IGUC,IS3,T)$(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC))..  !! 'Unit commitment: Number of endogenous units on limited by unit size and capacity)'
VUCON(IY411,IA,IGUC,IS3,T)
$ifi %PLANNED_MAINTENANCE%==yes  + VUCONMAINT(IY411,IA,IGUC,IS3)$IGPLANMAINT(IGUC)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')*(1$(NOT IGKRATE(IA,IGUC,IS3,T)) + IGKRATE(IA,IGUC,IS3,T))
;

QUCVUCU(IY411,IA,IGUC,IS3,T)$(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC))..  !! 'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)'
VUCU(IY411,IA,IGUC,IS3,T)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCD(IY411,IA,IGUC,IS3,T)$(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC))..  !! 'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)'
VUCD(IY411,IA,IGUC,IS3,T)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCSTARTQ(IY411,IA,IGUC,S,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S)
$ifi      %SEASONALLINKUC%==yes         AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))
$ifi not  %SEASONALLINKUC%==yes         AND (NOT (ORD(T) EQ 1))
)..   !! 'Unit commitment: on-off logic'
   VUCU(IY411,IA,IGUC,S,T) - VUCD(IY411,IA,IGUC,S,T)
    =E=
   VUCON(IY411,IA,IGUC,S,T)
$ifi not %SEASONALLINKUC%==yes  - VUCON(IY411,IA,IGUC,S,T-1)
$ifi %SEASONALLINKUC%==yes      - VUCON(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1)  - VUCON(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))

$include "../../base/addons/_hooks/qucstartq.inc"
;

QUCMAXVGF(IY411,IA,IGUC,IS3,T)$IAGK_HASORPOT(IY411,IA,IGUC)..    !! 'Unit commitment: Fuel consumption below maximum (of units online)'
   VUCON(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
         /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC)))
    =G=
   VGF_T(IY411,IA,IGUC,IS3,T)
$ifi %COMBTECH%==yes + sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,IS3,T))$IGCOMB1(IGUC)
;


$ifi not %MINFUELCONS%==yes $goto MINFUELCONS_END

EQUATION  QUCMINVGF(Y,AAA,G,S,T)   'Unit commitment: Fuel consumption above minimum (of units online)';

QUCMINVGF(IY411,IA,IGUC,IS3,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND GDATA(IGUC,'GDUCGMIN'))..  !! 'Unit commitment: Fuel consumption above minimum (of units online)'
   VGF_T(IY411,IA,IGUC,IS3,T)
$ifi %COMBTECH%==yes + sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,IS3,T))$IGCOMB1(IGUC)
    =G=
* Fuel consumption at minimum load is defined by Fmin = [ Emin (1-F0) +Emax*F0 ]/FE
  (
* Emin
   VUCON(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCGMIN')*GDATA(IGUC,'GDUCUNITSIZE')*(1-GDATA(IGUC,'GDUCF0'))
* Emax
   +VUCON(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCUNITSIZE')*GDATA(IGUC,'GDUCF0')
* FE
   )*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC)))
;

$label  MINFUELCONS_END

$ifi not %MINSTARTUPTIME%==yes $goto MINSTARTUPTIME_END

EQUATION  QUCUT(Y,AAA,G,S,T)      'Unit commitment: Number of unit startups respecting minimum on time';

QUCUT(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCUTMIN') GT CHRONOHOUR(S,T)) AND IS3(S)
$ifi      %SEASONALLINKUC%==yes         AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))
$ifi not  %SEASONALLINKUC%==yes         AND (NOT (ORD(T) EQ 1))
)..
* units start up at t
$ifi not %SEASONALLINKUC%==yes  SUM(IUCT$(ORD(IUCT) LE GDATA(IGUC,'GDUCUTMIN')/CHRONOHOUR(S,T)),VUCU(IY411,IA,IGUC,S,T-(ORD(IUCT)-1)))
$ifi %SEASONALLINKUC%==yes      SUM((ISALIAS,ITALIAS)$IGUCUT(IGUC,S,T,ISALIAS,ITALIAS), VUCU(IY411,IA,IGUC,ISALIAS,ITALIAS))

         =L=
         VUCON(IY411,IA,IGUC,S,T)
;

$label  MINSTARTUPTIME_END

$ifi not %MINSHUTDOWNTIME%==yes $goto MINSHUTDOWNTIME_END

EQUATION  QUCDT(Y,AAA,G,S,T)  'Unit commitment: Number of unit shutdowns respecting minimum off time';

QUCDT(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCDTMIN') GT CHRONOHOUR(S,T)) AND IS3(S)
$ifi      %SEASONALLINKUC%==yes         AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))
$ifi not  %SEASONALLINKUC%==yes         AND (NOT (ORD(T) EQ 1))
) ..
* units shut down at t
$ifi not %SEASONALLINKUC%==yes   SUM(IUCT$(ORD(IUCT) LE GDATA(IGUC,'GDUCDTMIN')/CHRONOHOUR(S,T)), VUCD(IY411,IA,IGUC,S,T-(ORD(IUCT)-1)))
$ifi %SEASONALLINKUC%==yes       SUM((ISALIAS,ITALIAS)$IGUCDT(IGUC,S,T,ISALIAS,ITALIAS), VUCD(IY411,IA,IGUC,ISALIAS,ITALIAS))
         =L=
         (GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
         +VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC))) / GDATA(IGUC,'GDUCUNITSIZE')
         -VUCON(IY411,IA,IGUC,S,T)
;

$label  MINSHUTDOWNTIME_END

$ifi %STEPWISE_RAMPING_UC%==no_ramping $goto STEPWISERAMPING_END

EQUATION  QUCRAMPU(Y,AAA,G,S,T)   'Unit commitment: Unit up-ramping below unit up-gradient for unit on and below minimum fuel consumption during unit startup.';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_UP_BALANCE (Y,AAA,G,S,T)       'Equation that balances the total ramping up for each timestep';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_UP_RATE_CAPABILITY(Y,AAA,G,RAMPING_RATE,S,T)   'Equation that limits the ramping up of each generation technologys ramping rate for each timestep';
EQUATION  QUCRAMPD(Y,AAA,G,S,T)   'Unit commitment: Unit down-ramping below unit down-gradient for unit on and below minimum fuel consumption during unit shutdown.';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_DOWN_BALANCE (Y,AAA,G,S,T)   'Equation that balances the total ramping down for each timestep';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_DOWN_RATE_CAPABILITY(Y,AAA,G,RAMPING_RATE,S,T) 'Equation that limits the ramping down of each generation technologys ramping rate for each timestep';

$ifi not %SEASONALLINKUC%==yes $goto STEPWISERAMPING_SEASONLINK_END

QUCRAMPU(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCRAMPU') LT CHRONOHOUR(S,T)) AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1))) AND IS3(S))..
* up gradient at t
-VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) - VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
    + VGF_T(IY411,IA,IGUC,S,T)
         =L=
     (
* units under start up have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCU(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under start up
        + GDATA(IGUC,'GDUCRAMPU')*(VUCON(IY411,IA,IGUC,S,T) - VUCU(IY411,IA,IGUC,S,T))
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$include "../../base/addons/_hooks/qucrampu.inc"
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_BALANCE(IY411,IA,IGUC,S,T)$((NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost -VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) - VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost +  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;


QUCRAMPD(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCRAMPD') LT CHRONOHOUR(S,T)) AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1))) AND IS3(S))..
* down gradient at t
 +VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) + VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
    - VGF_T(IY411,IA,IGUC,S,T)
         =L=
     (
* units under shut down have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCD(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under shutdown
        + GDATA(IGUC,'GDUCRAMPD')*VUCON(IY411,IA,IGUC,S,T)
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$include "../../base/addons/_hooks/qucrampd.inc"
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_BALANCE (IY411,IA,IGUC,S,T)$((NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost +VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) + VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost -  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$label  STEPWISERAMPING_SEASONLINK_END

$ifi %SEASONALLINKUC%==yes $goto STEPWISERAMPING_NOT_SEASON_LINK_END

QUCRAMPU(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCRAMPU') LT CHRONOHOUR(S,T)) AND (NOT (ORD(T) EQ 1)) AND IS3(S))..
* up gradient at t
- VGF_T(IY411,IA,IGUC,S,T-1)
    + VGF_T(IY411,IA,IGUC,S,T)

         =L=
     (
* units under start up have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCU(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under start up
        + GDATA(IGUC,'GDUCRAMPU')*(VUCON(IY411,IA,IGUC,S,T) - VUCU(IY411,IA,IGUC,S,T))
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_BALANCE(IY411,IA,IGUC,S,T)$((NOT (ORD(T) EQ 1))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost  - VGF_T(IY411,IA,IGUC,S,T-1)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost +  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;


QUCRAMPD(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCRAMPD') LT CHRONOHOUR(S,T)) AND (NOT (ORD(T) EQ 1)) AND IS3(S))..
* down gradient at t
  + VGF_T(IY411,IA,IGUC,S,T-1)
    - VGF_T(IY411,IA,IGUC,S,T)
         =L=
     (
* units under shut down have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCD(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under shutdown
        + GDATA(IGUC,'GDUCRAMPD')*VUCON(IY411,IA,IGUC,S,T)
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_BALANCE (IY411,IA,IGUC,S,T)$((NOT (ORD(T) EQ 1))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost + VGF_T(IY411,IA,IGUC,S,T-1)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost -  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$label  STEPWISERAMPING_NOT_SEASON_LINK_END

$label  STEPWISERAMPING_END

$ifi not %PLANNED_MAINTENANCE%==yes $goto NO_PLANNED_MAINTENANCE
EQUATION  QUCVUCON_EXISTING(Y,AAA,G,S,T)    'Unit commitment: Number of endogenous units on limited by unit size and capacity) for existing units';
EQUATION  QUCVUCONMAINT(Y,AAA,G,S)    'Unit commitment: Number of endogenous units on limited by unit size and capacity) in maintenaince ';
EQUATION  QUCVUCUMAINT(Y,AAA,G,S)     'Unit commitment: Number of start up endogenous units in maintenaince on limited by unit size and capacity)';
EQUATION  QUCVUCDMAINT(Y,AAA,G,S)     'Unit commitment: Number of shut down endogenous units on in maintenaince limited by unit size and capacity)';
EQUATION  QUCSTARTQMAINT(Y,AAA,G,S)    'Unit commitment: on-off logic for units in maintenaince';
EQUATION  QUCUTMAINT(Y,AAA,G,S)     'Unit commitment: when a unit is on planned maintenaince, it lasts for a certain time';
EQUATION  QUCMAINTMIN(Y,AAA,G)     'Unit commitment: all units need to have planned maintenaince in the year for existing capacity';
EQUATION  QUCMAINTMIN_DEV(Y,AAA,G)     'Unit commitment: all units need to have planned maintenaince in the year for technologies allowed for investment and/or decommisionning';


QUCVUCON_EXISTING(IY411,IA,IGUC,IS3,T)$(GKFX(IY411,IA,IGUC) AND NOT(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC))) AND NOT(IGDECOMEXOPOT(IY411,IA,IGUC))
$ifi not %ADDPLANNEDMAINTENANCE%==yes AND IGPLANMAINT(IGUC)
$ifi     %ADDPLANNEDMAINTENANCE%==yes AND UCONMAINT(IY411,IA,IGUC,IS3)
)..
VUCON(IY411,IA,IGUC,IS3,T) + VUCONMAINT(IY411,IA,IGUC,IS3)
=L=
CEIL(GKFX(IY411,IA,IGUC)/GDATA(IGUC,'GDUCUNITSIZE'))
$include "../../base/addons/_hooks/qucvucon_existing.inc"
;

QUCVUCONMAINT(IY411,IA,IGUC,IS3)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..  !! 'Unit commitment: Number of endogenous units on limited by unit size and capacity)'
VUCONMAINT(IY411,IA,IGUC,IS3)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCUMAINT(IY411,IA,IGUC,IS3)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..  !! 'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)'
VUCUMAINT(IY411,IA,IGUC,IS3)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCDMAINT(IY411,IA,IGUC,IS3)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..  !! 'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)'
VUCDMAINT(IY411,IA,IGUC,IS3)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCSTARTQMAINT(IY411,IA,IGUC,S)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S) AND IGPLANMAINT(IGUC))..   !! 'Unit commitment: on-off logic'
   VUCUMAINT(IY411,IA,IGUC,S) - VUCDMAINT(IY411,IA,IGUC,S)
    =E=
   VUCONMAINT(IY411,IA,IGUC,S) - VUCONMAINT(IY411,IA,IGUC,S--1)
;

QUCUTMAINT(IAGK_HASORPOT(IY411,IA,IGUC),S)$(IS3(S) AND IGPLANMAINT(IGUC)) ..

SUM(ISALIAS$IGUCUTMAINT(IGUC,S,ISALIAS), VUCUMAINT(IY411,IA,IGUC,ISALIAS))
         =L=
         VUCONMAINT(IY411,IA,IGUC,S)
;

QUCMAINTMIN(IY411,IA,IGUC)$(GKFX(IY411,IA,IGUC) AND NOT(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC))) AND NOT(IGDECOMEXOPOT(IY411,IA,IGUC))  AND IGPLANMAINT(IGUC))..
SUM(IS3,VUCONMAINT(IY411,IA,IGUC,IS3)*SSIZE(IS3)*WEIGHT_S(IS3))
=E=
CEIL(GKFX(IY411,IA,IGUC)/GDATA(IGUC,'GDUCUNITSIZE'))*IGPLANMAINT(IGUC)
;

QUCMAINTMIN_DEV(IY411,IA,IGUC)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC)) ..
SUM(IS3,VUCONMAINT(IY411,IA,IGUC,IS3)*SSIZE(IS3)*WEIGHT_S(IS3))
=E=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')*IGPLANMAINT(IGUC)
;

$label NO_PLANNED_MAINTENANCE


